name: Docker-Ui-Server
on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - 'master'
  #     - 'develop'
  #     - 'Jiang-2.4.0'
  # pull_request:
  #   types: [edited, ready_for_review, opened, synchronize, reopened]
  #   paths-ignore:
  #     - 'site/**'
  #     - '**/*.md'

env:
  CYPRESS_VERIFY_TIMEOUT: 180000 # https://docs.cypress.io/guides/guides/command-line#cypress-verify
  CVAT_VERSION: "local"

jobs:
  search_cache:
    if: |
      github.event.pull_request.draft == false &&
      !startsWith(github.event.pull_request.title, '[WIP]') &&
      !startsWith(github.event.pull_request.title, '[Dependent]')
    uses: ./.github/workflows/search-cache.yml

  build:
    needs: search_cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # - name: CVAT server. Getting cache from the default branch
      #   uses: actions/cache@v3
      #   with:
      #     path: /tmp/cvat_cache_server
      #     key: ${{ runner.os }}-build-server-${{ needs.search_cache.outputs.sha }}

      - name: CVAT UI. Getting cache from the default branch
        uses: actions/cache@v3
        with:
          path: /tmp/cvat_cache_ui
          key: ${{ runner.os }}-build-ui-${{ needs.search_cache.outputs.sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create artifact directories
        run: |
          mkdir /tmp/cvat_ui
        # mkdir /tmp/cvat_server

      # - name: CVAT server. Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     cache-from: type=local,src=/tmp/cvat_cache_server
      #     context: .
      #     file: Dockerfile
      #     tags: cvat/server
      #     outputs: type=docker,dest=/tmp/cvat_server/image.tar

      - name: CVAT UI. Build and push
        uses: docker/build-push-action@v3
        with:
          cache-from: type=local,src=/tmp/cvat_cache_ui
          context: .
          file: Dockerfile.ui
          tags: cvat/ui
          outputs: type=docker,dest=/tmp/cvat_ui/image.tar

      # - name: Upload CVAT server artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: cvat_server
      #     path: /tmp/cvat_server/image.tar

      - name: Upload CVAT UI artifact
        uses: actions/upload-artifact@v3
        with:
          name: cvat_ui
          path: /tmp/cvat_ui/image.tar


      # - name: Download CVAT server images
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: cvat_server
      #     path: /tmp/cvat_server/

      - name: Download CVAT UI images
        uses: actions/download-artifact@v3
        with:
          name: cvat_ui
          path: /tmp/cvat_ui/

      - name: Load Docker images
        run: |
          docker load --input /tmp/cvat_ui/image.tar
        # docker load --input /tmp/cvat_server/image.tar
          docker tag cvat/server:latest cvat/server:${CVAT_VERSION}
          docker tag cvat/ui:latest cvat/ui:${CVAT_VERSION}
          docker image ls -a

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push to Docker Hub
        env:
          UI_IMAGE_REPO: ${{ secrets.DOCKERHUB_WORKSPACE }}/ui
          SERVER_IMAGE_REPO: ${{ secrets.DOCKERHUB_WORKSPACE }}/server
        run: |
          docker tag cvat/ui:latest "${UI_IMAGE_REPO}:v2.4.0"
          docker push "${UI_IMAGE_REPO}:v2.4.0"

        # docker tag cvat/server:latest "${SERVER_IMAGE_REPO}:v2.4.0"
        # docker push "${SERVER_IMAGE_REPO}:v2.4.0"

